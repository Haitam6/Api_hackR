{
    "openapi": "3.0.0",
    "info": {
        "title": "HackR API",
        "description": "HackR API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Haitam Elqassimi"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "haitamelqassimi@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Common password error"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "haitamelqassimi@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get current user profile",
                "operationId": "023eae4c11807c8d3edd0903770b1e64",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "example": "haitamelqassimi@example.com"
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Haitam Elqassimi"
                                        },
                                        "statut": {
                                            "type": "string",
                                            "example": "active"
                                        },
                                        "date_creation": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/domains/{domain}": {
            "get": {
                "tags": [
                    "Domains"
                ],
                "summary": "Retrieve subdomains of a given domain",
                "operationId": "c86e628310813e3204aa7c3501afefba",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "The domain name to fetch subdomains for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subdomains",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subdomains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Impossible de récupérer les sous-domaines."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emails/spam": {
            "post": {
                "tags": [
                    "Email Spammer"
                ],
                "summary": "Spam emails to a recipient",
                "operationId": "dc4411de350751d1ef0f40f37ed79cd6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient_email": {
                                        "type": "string",
                                        "example": "recipient@example.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Spam Subject"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the spam content."
                                    },
                                    "count": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emails sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Emails sent successfully!"
                                        },
                                        "email_count": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send emails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to send emails"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-email/{email}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify email using Hunter.io API",
                "operationId": "ca2d05a7147142f8bd89559bfed8ec34",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email to verify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "example@domain.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verification result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "data": {
                                        "email": "example@domain.com",
                                        "result": "deliverable",
                                        "score": 95
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email verification failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email verification failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/generate-fake-identity": {
            "post": {
                "tags": [
                    "Identity Generation"
                ],
                "summary": "Generate a fake identity",
                "operationId": "05bf339abffb12bfc3ba5c74420becb1",
                "responses": {
                    "200": {
                        "description": "Fake identity generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.doe@example.com"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St, Springfield, USA"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/check-password": {
            "post": {
                "tags": [
                    "Password Check"
                ],
                "summary": "Check if a password is common",
                "operationId": "ae5b71727a6f82d5e25d693203f45cab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The password is common"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password list file not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Password list file not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The password field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/generate-password": {
            "post": {
                "tags": [
                    "Password Generation"
                ],
                "summary": "Generate a secure random password",
                "operationId": "ef66beb15c20f5a1a35fdc38a177a112",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "length": {
                                        "description": "Length of the password",
                                        "type": "integer",
                                        "example": 12
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "example": "A1b!cdefghij"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password generated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Domains",
            "description": "Domains"
        },
        {
            "name": "Email Spammer",
            "description": "Email Spammer"
        },
        {
            "name": "Email Verification",
            "description": "Email Verification"
        },
        {
            "name": "Identity Generation",
            "description": "Identity Generation"
        },
        {
            "name": "Password Check",
            "description": "Password Check"
        },
        {
            "name": "Password Generation",
            "description": "Password Generation"
        }
    ]
}