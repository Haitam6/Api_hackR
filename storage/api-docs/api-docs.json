{
    "openapi": "3.0.0",
    "info": {
        "title": "HackR API",
        "description": "Here is my Swagger documentation for my HackR API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account by providing a name, email, and password. The password is validated to ensure it's not too common.",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "description": "User details for registration",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Full name of the user",
                                        "type": "string",
                                        "example": "Test Api"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "example": "TestApi@test.com"
                                    },
                                    "password": {
                                        "description": "Secure password for the user",
                                        "type": "string",
                                        "example": "Password123@"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT token for authentication",
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token validity duration in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Common password error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The password you provided is too common. Please choose a more secure password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed for one or more fields."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "User login",
                "description": "Authenticate a user using their email and password, and return a JWT token upon success.",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's registered email",
                                        "type": "string",
                                        "example": "Admin@test.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "Password123@"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "JWT token for authentication",
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "description": "Token type",
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "description": "Token validity duration in seconds",
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Get current user profile",
                "description": "Retrieve the profile information of the currently authenticated user.",
                "operationId": "023eae4c11807c8d3edd0903770b1e64",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "description": "User's email address",
                                            "type": "string",
                                            "example": "Haitam_elqassimi10@outlook.fr"
                                        },
                                        "nom": {
                                            "description": "User's full name",
                                            "type": "string",
                                            "example": "Haitam Elqassimi"
                                        },
                                        "statut": {
                                            "description": "User's account status",
                                            "type": "string",
                                            "example": "active"
                                        },
                                        "date_creation": {
                                            "description": "Account creation date",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token absent or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/crawlers": {
            "post": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Retrieve information using a search query",
                "description": "Fetches search results from an external API based on the provided search query.",
                "operationId": "604e04f74e9c3ddf9b6723a590e55c46",
                "requestBody": {
                    "description": "Input parameters for the search operation.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "search"
                                ],
                                "properties": {
                                    "search": {
                                        "description": "The search query string to fetch results for.",
                                        "type": "string",
                                        "example": "My digital school"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "The search results.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated or lacking required permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Authentication or authorization error message.",
                                            "type": "string",
                                            "example": "You are not authenticated "
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: [error details]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tests/ddos": {
            "post": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Simulate a high traffic load on a target server",
                "description": "This feature performs a load test by sending a specified number of HTTP requests to a given URL. The test results include HTTP status codes and response reasons. Authentication and role verification are required.",
                "operationId": "b97a89e097c003fcf6092540dd3a16e6",
                "requestBody": {
                    "description": "Input parameters for the load test.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "requests"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "The target URL to load test.",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "requests": {
                                        "description": "The number of requests to send to the target URL.",
                                        "type": "integer",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Load test completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message.",
                                            "type": "string",
                                            "example": "Load test completed successfully."
                                        },
                                        "results": {
                                            "description": "Details of each HTTP request sent during the load test.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "description": "HTTP status code of the response.",
                                                        "type": "integer",
                                                        "example": 200
                                                    },
                                                    "reason": {
                                                        "description": "HTTP reason phrase of the response.",
                                                        "type": "string",
                                                        "example": "OK"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated or lacking required permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message for unauthorized access.",
                                            "type": "string",
                                            "example": "You are not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error due to missing or invalid input data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Validation error message.",
                                            "type": "string",
                                            "example": "The url and requests fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred during the load test.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message describing the internal server issue.",
                                            "type": "string",
                                            "example": "An error occurred: Connection timed out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/domains/{domain}/subdomains": {
            "get": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Retrieve subdomains of a given domain",
                "operationId": "3c34d7df2a96922025eeb3b6a9911fe8",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "The domain name to fetch subdomains for.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subdomains retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subdomains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "sub.example.com"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access forbidden due to insufficient permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Vous n'avez pas le droit pour faire cela."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subdomains could not be retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Impossible de récupérer les sous-domaines."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Specific error details here."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/emails/spam-actions": {
            "post": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Spam multiple emails to a recipient",
                "description": "This feature allows sending a specified number of emails to a recipient with a custom subject and content. The user must be authenticated and have the necessary permissions.",
                "operationId": "44903b15126915c58ca4710ace34e541",
                "requestBody": {
                    "description": "The email spam details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recipient_email",
                                    "subject",
                                    "content",
                                    "count"
                                ],
                                "properties": {
                                    "recipient_email": {
                                        "description": "The email address of the recipient",
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "subject": {
                                        "description": "The subject of the spam emails",
                                        "type": "string",
                                        "example": "Important Update"
                                    },
                                    "content": {
                                        "description": "The content of the spam emails",
                                        "type": "string",
                                        "example": "This is a spam email for testing purposes."
                                    },
                                    "count": {
                                        "description": "The number of emails to send",
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emails sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Emails sent successfully!"
                                        },
                                        "email_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors or invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication or authorization error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated or insufficient permissions"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to send emails"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/emails/verify/{email}": {
            "get": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Verify an email address.",
                "description": "This feature verifies an email address.",
                "operationId": "a13e2d59351e987f872671c64cec5fa8",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "The email address to verify.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "example@domain.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verification was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "example@domain.com"
                                                },
                                                "result": {
                                                    "type": "string",
                                                    "example": "deliverable"
                                                },
                                                "score": {
                                                    "type": "integer",
                                                    "example": 95
                                                },
                                                "smtp_check": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "regex": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "gibberish": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "disposable": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Vous n'avez pas le droit pour faire cela."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or email verification failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email verification failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/identities/fake": {
            "get": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Generate a Fake Identity",
                "description": "Generates a fake identity and returns the generated data.",
                "operationId": "generateFakeIdentity",
                "responses": {
                    "200": {
                        "description": "Successfully generated fake identity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "description": "Generated fake name",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "Generated fake email",
                                            "type": "string"
                                        },
                                        "address": {
                                            "description": "Generated fake address",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "Generated fake phone number",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "name": "Kevin Niel",
                                    "email": "Niel_kevin@mds.com",
                                    "address": "5 avenue de la République, 75001 Paris",
                                    "phone": "+33 6 12 34 56 78"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "error": "You are not authenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have the necessary permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "error": "Vous n'avez pas le droit pour faire cela."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/images/random": {
            "get": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Fetch a random image",
                "description": "Fetches a random image from an external service and returns it.",
                "operationId": "fetchRandomImage",
                "responses": {
                    "200": {
                        "description": "Random image retrieved successfully",
                        "content": {
                            "image/jpeg": {
                                "schema": [
                                    {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "error": "You are not authenticated."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have the necessary permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "error": "Vous n'avez pas le droit pour faire cela."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to fetch the image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "error": "Failed to fetch the image."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logs/recent": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get the last logs",
                "operationId": "3898208f01f5053eba7778f231537d2a",
                "parameters": [
                    {
                        "name": "nbLogs",
                        "in": "query",
                        "description": "Number of logs to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the last logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "date_action": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-01-14T15:04:05"
                                            },
                                            "user": {
                                                "type": "string",
                                                "example": "Haitam Elqassimi"
                                            },
                                            "fonctionnalite": {
                                                "type": "string",
                                                "example": "Email spam"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Vous n'avez pas le droit pour faire cela, seul l'admin peut le faire."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while retrieving logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des logs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logs/user": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs by user email",
                "operationId": "3f5d2b23875b8500a36ccfd6710199c8",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of the user to retrieve logs for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of logs for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "date_action": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-01-14T15:04:05"
                                            },
                                            "user": {
                                                "type": "string",
                                                "example": "Haitam Elqassimi",
                                                "nullable": true
                                            },
                                            "fonctionnalite": {
                                                "type": "string",
                                                "example": "Email spam",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email parameter is missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Paramètre manquant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Vous n'avez pas le droit pour faire cela, seul l'admin peut le faire."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while retrieving logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des logs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logs/functionality/{nom_fonctionnalite}": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs by functionality",
                "operationId": "d72119f04032e42d2bbef132a98dabe1",
                "parameters": [
                    {
                        "name": "nom_fonctionnalite",
                        "in": "path",
                        "description": "Name of the functionality to retrieve logs for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Email spam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of logs for the functionality",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "date_action": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-01-14T15:04:05"
                                            },
                                            "user": {
                                                "type": "string",
                                                "example": "Haitam Elqassimi"
                                            },
                                            "fonctionnalite": {
                                                "type": "string",
                                                "example": "Email spam"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Vous n'avez pas le droit pour faire cela, seul l'admin peut le faire."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Functionality not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Fonctionnalité non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while retrieving logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des logs"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/passwords/check": {
            "post": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Check password strength",
                "description": "Check if a password is common from a predefined list.",
                "operationId": "c32c8b9b701c1a228de765c432d4e0a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "description": "The password to check if it is common.",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The password is common"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password list file not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Password list file not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The password field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. User lacks sufficient permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/passwords/generate": {
            "get": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Generate a Secure Password",
                "description": "Generates a secure password containing at least one uppercase letter, one lowercase letter, one number, and one special character. The default password length is 12 characters, but you can specify a different length.",
                "operationId": "generateSecurePassword",
                "parameters": [
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of the generated password (default is 12 if not provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 12,
                            "example": 16
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated secure password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "description": "The generated secure password",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User does not have the right to generate a password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/phishing": {
            "post": {
                "tags": [
                    "Fonctionnalités"
                ],
                "summary": "Phishing",
                "description": "Phishing attack to capture user credentials.",
                "operationId": "1faa030b2ee0bc8c4514e120e4a2d235",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "The URL of the webpage to inject the script.",
                                        "type": "string",
                                        "example": "https://fr-fr.facebook.com/login/web/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "HTML page with the phishing script injected.",
                        "content": {
                            "text/html": {
                                "example": "<html><head></head><body>...</body></html>"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The url field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/assign": {
            "put": {
                "tags": [
                    "Roles Management"
                ],
                "summary": "Assign or modify rights for a role",
                "description": "Assigns or modifies the rights of a role for a specific functionality.",
                "operationId": "giveRules",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fonctionnalite_id",
                                    "role_id"
                                ],
                                "properties": {
                                    "fonctionnalite_id": {
                                        "description": "ID of the functionality",
                                        "type": "integer"
                                    },
                                    "role_id": {
                                        "description": "ID of the role to be assigned",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully assigned or modified rights",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The right already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User does not have the right to assign roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Fonctionnalite": {
                "required": [
                    "nom_fonctionnalite"
                ],
                "properties": {
                    "id": {
                        "description": "ID de la fonctionnalité",
                        "type": "integer"
                    },
                    "nom_fonctionnalite": {
                        "description": "Nom de la fonctionnalité",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description de la fonctionnalité",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentification",
            "description": "Authentification"
        },
        {
            "name": "Fonctionnalités",
            "description": "Fonctionnalités"
        },
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "Roles Management",
            "description": "Roles Management"
        }
    ]
}