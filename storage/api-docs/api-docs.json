{
    "openapi": "3.0.0",
    "info": {
        "title": "HackR API",
        "description": "Here is my Swagger documentation for my HackR API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test Api"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "TestApi@test.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password123@"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Common password error"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "Haitam_elqassimi10@outlook.fr"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "haitam"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Get current user profile",
                "operationId": "023eae4c11807c8d3edd0903770b1e64",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "example": "Haitam_elqassimi10@outlook.fr"
                                        },
                                        "nom": {
                                            "type": "string",
                                            "example": "Haitam Elqassimi"
                                        },
                                        "statut": {
                                            "type": "string",
                                            "example": "active"
                                        },
                                        "date_creation": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/crawlerInformation": {
            "post": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Retrieve information using a search query",
                "description": "Fetches search results using an external API and logs the action.",
                "operationId": "6081a109027b7974e5f60bb0437e1ccb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search": {
                                        "description": "Search query for the crawler.",
                                        "type": "string",
                                        "example": "My digital school"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "The search results.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: [error details]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/Ddos": {
            "post": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Simulate a high traffic load on a target server",
                "operationId": "210be8edfdf3c5b6815f859d6cf388bd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "requests"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "requests": {
                                        "type": "integer",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Load test completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Load test completed successfully."
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 200
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "example": "OK"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The url and requests fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subdomains/{domain}": {
            "get": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Retrieve subdomains of a given domain",
                "operationId": "f1f17844eada1155bc07a22c602bf465",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "The domain name to fetch subdomains for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subdomains",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "subdomains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Domain not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Impossible de r√©cup√©rer les sous-domaines."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/emails/spam": {
            "post": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Spam emails to a recipient",
                "operationId": "54ad4fc49a13dd4aa0000df5a7ffa54f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipient_email": {
                                        "type": "string",
                                        "example": "TestSpam@test.com"
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Spam Subject"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the spam content."
                                    },
                                    "count": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emails sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Emails sent successfully!"
                                        },
                                        "email_count": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to send emails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to send emails"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Error details here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verify-email/{email}": {
            "get": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Verify email using Hunter.io API",
                "operationId": "d14d57938c126dcdce83afc1be35903f",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email to verify",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "example@domain.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verification result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "data": {
                                        "email": "example@domain.com",
                                        "result": "deliverable",
                                        "score": 95
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email verification failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email verification failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/generate-fake-identity": {
            "get": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Generate a Fake Identity",
                "description": "Generates a fake identity using the Faker library and returns the generated data.",
                "operationId": "generateFakeIdentity",
                "responses": {
                    "200": {
                        "description": "Successfully generated fake identity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "description": "Generated fake name",
                                            "type": "string"
                                        },
                                        "email": {
                                            "description": "Generated fake email",
                                            "type": "string"
                                        },
                                        "address": {
                                            "description": "Generated fake address",
                                            "type": "string"
                                        },
                                        "phone": {
                                            "description": "Generated fake phone number",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not authenticated or does not have the right to access the functionality",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have the necessary permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/random-image": {
            "get": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Fetch a random image",
                "operationId": "2f18c87654589cee5a98348703991d44",
                "responses": {
                    "200": {
                        "description": "Random image retrieved successfully",
                        "content": {
                            "image/jpeg": {
                                "schema": [
                                    {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch the image."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getLastLogs": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get the last logs",
                "operationId": "97d1feb5c5933b77b3fc7f85eca19ea8",
                "parameters": [
                    {
                        "name": "nbLogs",
                        "in": "query",
                        "description": "Number of logs to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the last logs"
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Error while retrieving logs"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getLogsByUser": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs by user",
                "operationId": "129c9863584278c918532bb4eecf1d2c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "Haitam_elqassimi10@outlook.fr"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of logs for the user"
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Error while retrieving logs"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getLogsByFunctionality": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get logs by functionality",
                "operationId": "5295b289543fcbdc9738ac05e19a458a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom_fonctionnalite": {
                                        "type": "string",
                                        "example": "Email spam"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of logs for the functionality"
                    },
                    "401": {
                        "description": "User not authenticated"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Functionality not found"
                    },
                    "500": {
                        "description": "Error while retrieving logs"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/check-password": {
            "post": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Check if a password is common",
                "operationId": "c161d6c59a7e9f3b935b56a713b5d432",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "The password is common"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password list file not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Password list file not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The password field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/generate-password": {
            "get": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Generate a Secure Password",
                "description": "Generates a secure password with at least one uppercase letter, one lowercase letter, one number, and one special character.",
                "operationId": "generateSecurePassword",
                "parameters": [
                    {
                        "name": "length",
                        "in": "query",
                        "description": "The length of the generated password (default is 12 if not provided)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated secure password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "description": "Generated password",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User does not have the right to generate a password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/phish": {
            "post": {
                "tags": [
                    "Fonctionnalit√©s"
                ],
                "summary": "Phishing",
                "description": "Phishing attack to capture user credentials.",
                "operationId": "c014e780e1ed02c0dd4421185c85c0a8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "url": {
                                        "description": "The URL of the webpage to inject the script.",
                                        "type": "string",
                                        "example": "https://fr-fr.facebook.com/login/web/"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "HTML page with the phishing script injected.",
                        "content": {
                            "text/html": {
                                "example": "<html><head></head><body>...</body></html>"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The url field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/giveRules": {
            "post": {
                "tags": [
                    "Roles Management"
                ],
                "summary": "Assign or modify rights for a role",
                "description": "Assigns or modifies the rights of a role for a specific functionality.",
                "operationId": "giveRules",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fonctionnalite_id",
                                    "role_id"
                                ],
                                "properties": {
                                    "fonctionnalite_id": {
                                        "description": "ID of the functionality",
                                        "type": "integer"
                                    },
                                    "role_id": {
                                        "description": "ID of the role to be assigned",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully assigned or modified rights",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - The right already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User does not have the right to assign roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Fonctionnalite": {
                "required": [
                    "nom_fonctionnalite"
                ],
                "properties": {
                    "id": {
                        "description": "ID de la fonctionnalit√©",
                        "type": "integer"
                    },
                    "nom_fonctionnalite": {
                        "description": "Nom de la fonctionnalit√©",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description de la fonctionnalit√©",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentification",
            "description": "Authentification"
        },
        {
            "name": "Fonctionnalit√©s",
            "description": "Fonctionnalit√©s"
        },
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "Roles Management",
            "description": "Roles Management"
        }
    ]
}